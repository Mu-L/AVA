{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/chart-advisor/pipeline","result":{"data":{"site":{"siteMetadata":{"title":"AVA","isAntVSite":false,"examples":[{"slug":"ckb","icon":null,"title":{"zh":"图表知识库（CKB)","en":"Chart Knowledge Base (CKB)"}},{"slug":"chart-advisor","icon":null,"title":{"zh":"图表推荐库","en":"Chart Advisor"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/ckb/CKBJson"},"frontmatter":{"title":"CKB 基础演示","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"ckb/CKBJson/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/ckb/CKBJson"},"frontmatter":{"title":"CKB Application","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"ckb/CKBJson/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/chart-advisor/auto-chart"},"frontmatter":{"title":"autoChart 示例","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/auto-chart/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/chart-advisor/auto-chart"},"frontmatter":{"title":"autoChart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/auto-chart/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/chart-advisor/pipeline"},"frontmatter":{"title":"pipeline","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/pipeline/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/chart-advisor/pipeline"},"frontmatter":{"title":"pipeline 流程","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/pipeline/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/ckb/CKBJson/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"ckb/CKBJson/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/chart-advisor/pipeline/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/pipeline/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/chart-advisor/pipeline/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/pipeline/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/chart-advisor/auto-chart/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/auto-chart/API.en.md"}}},{"node":{"fields":{"slug":"/en/examples/ckb/CKBJson/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"ckb/CKBJson/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/chart-advisor/auto-chart/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"chart-advisor/auto-chart/API.zh.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"ckb/CKBJson/demo/chartdic.jsx","absolutePath":"/Users/yuxi/Desktop/AntV/AVA/packages/ava-site/examples/ckb/CKBJson/demo/chartdic.jsx","order":0,"filename":"chartdic.jsx","title":{"zh":"使用 CKB 制作图表词典","en":"Chart Dictionary by CKB"},"postFrontmatter":{"zh":{"title":"CKB 基础演示","order":100},"en":{"title":"CKB Application","order":100}}},{"relativePath":"chart-advisor/pipeline/demo/basic.jsx","absolutePath":"/Users/yuxi/Desktop/AntV/AVA/packages/ava-site/examples/chart-advisor/pipeline/demo/basic.jsx","order":0,"filename":"basic.jsx","title":{"en":"pipeline demo","zh":"pipeline demo"},"postFrontmatter":{"en":{"title":"pipeline","order":201},"zh":{"title":"pipeline 流程","order":201}}},{"relativePath":"chart-advisor/auto-chart/demo/basic.ts","absolutePath":"/Users/yuxi/Desktop/AntV/AVA/packages/ava-site/examples/chart-advisor/auto-chart/demo/basic.ts","order":0,"filename":"basic.ts","title":{"en":"Basic autoChart usage","zh":"基础 autoChart 用法"},"postFrontmatter":{"zh":{"title":"autoChart 示例","order":200},"en":{"title":"autoChart","order":200}}}],"exampleSections":{"examples":[{"relativePath":"chart-advisor/pipeline/demo/basic.jsx","absolutePath":"/Users/yuxi/Desktop/AntV/AVA/packages/ava-site/examples/chart-advisor/pipeline/demo/basic.jsx","order":0,"filename":"basic.jsx","title":{"en":"pipeline demo","zh":"pipeline demo"},"source":"import React, { useState, useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Select, Space, Row, Col } from 'antd';\nimport Thumbnails from '@antv/thumbnails';\nimport { dataToDataProps, dataPropsToAdvices, specToLibConfig, g2plotRender } from '@antv/chart-advisor';\n\nconst charts = Object.keys(Thumbnails);\nconst { Option } = Select;\n\nconst App = () => {\n  const [data, setData] = useState('yearmonth_gdp_city');\n  const [current, setCurrent] = useState();\n  const [advices, setAdvices] = useState([]);\n  const canvas = useRef();\n\n  useEffect(() => {\n    const chartData = getData(data);\n\n    // step 1: data -> data props\n    const dataProps = dataToDataProps(chartData);\n    console.log('dataProps: ', dataProps);\n\n    // step 2: data props -> Advices( chart type + vega lite specs)\n    const advices = dataPropsToAdvices(dataProps);\n    console.log('advices: ', advices);\n\n    setAdvices(advices);\n    setCurrent(advices[0].type);\n  }, [data]);\n\n  useEffect(() => {\n    const chartData = getData(data);\n    if (current && canvas.current) {\n      // step 3: vega lite spec -> lib config\n      const typeSpec = advices.find((s) => s.type === current);\n      console.log('typeSpec: ', typeSpec);\n\n      // step 4: lib config -> chart render & return instance\n      const libConfig = specToLibConfig(typeSpec);\n      console.log('libConfig: ', libConfig);\n\n      canvas.current.innerHTML = null;\n      // step 5: render\n      g2plotRender(canvas.current, chartData, libConfig);\n    }\n  }, [data, current]);\n\n  const recommend = advices.map((i) => i.type);\n  return (\n    <Space direction=\"vertical\" size=\"large\">\n      <Space>\n        <span>Data Source:</span>\n        <Select\n          value={data}\n          onChange={(v) => {\n            setData(v);\n          }}\n          style={{ width: 200 }}\n        >\n          <Option value=\"yearmonth_gdp_city\">yearmonth_gdp_city</Option>\n          <Option value=\"region_sales\">region_sales</Option>\n          <Option value=\"region_cat_sales\">region_cat_sales</Option>\n        </Select>\n      </Space>\n      <Row>\n        <Col span={6}>\n          {charts.map((chart) => (\n            <img\n              src={Thumbnails[chart].url}\n              key={chart}\n              style={{\n                margin: 4,\n                border: chart === current ? '2px dashed #873bf4' : '1px solid #999',\n                width: 56,\n                borderRadius: 2,\n                opacity: recommend.indexOf(chart) > -1 ? 1 : 0.1,\n                cursor: recommend.indexOf(chart) > -1 ? 'pointer' : 'not-allowed',\n              }}\n              onClick={() => {\n                if (recommend.indexOf(chart) > -1) {\n                  setCurrent(chart);\n                }\n              }}\n            />\n          ))}\n        </Col>\n        <Col span={18}>\n          <div ref={canvas} style={{ minHeight: 300 }} />\n        </Col>\n      </Row>\n    </Space>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n\nfunction getData(series) {\n  const yearmonth_gdp_city = [\n    {\n      yearmonth: '2019-03',\n      gdp: 385,\n      city: 'Paris',\n    },\n    {\n      yearmonth: '2019-04',\n      gdp: 888,\n      city: 'Paris',\n    },\n    {\n      yearmonth: '2019-05',\n      gdp: 349,\n      city: 'Paris',\n    },\n    {\n      yearmonth: '2019-06',\n      gdp: 468,\n      city: 'Paris',\n    },\n    {\n      yearmonth: '2019-07',\n      gdp: 477,\n      city: 'Paris',\n    },\n    {\n      yearmonth: '2019-03',\n      gdp: 291,\n      city: 'London',\n    },\n    {\n      yearmonth: '2019-04',\n      gdp: 484,\n      city: 'London',\n    },\n    {\n      yearmonth: '2019-05',\n      gdp: 293,\n      city: 'London',\n    },\n    {\n      yearmonth: '2019-06',\n      gdp: 147,\n      city: 'London',\n    },\n    {\n      yearmonth: '2019-07',\n      gdp: 618,\n      city: 'London',\n    },\n  ];\n\n  const region_sales = [\n    { 地区: '华东', 销售额: 4684506.442 },\n    { 地区: '中南', 销售额: 4137415.0929999948 },\n    { 地区: '东北', 销售额: 2681567.469000001 },\n    { 地区: '华北', 销售额: 2447301.017000004 },\n    { 地区: '西北', 销售额: 815039.5959999998 },\n    { 地区: '西南', 销售额: 1303124.508000002 },\n  ];\n\n  const region_cat_sales = [\n    {\n      地区: '华东',\n      细分: '公司',\n      销售额: 1454715.807999998,\n    },\n    {\n      地区: '华东',\n      细分: '消费者',\n      销售额: 2287358.261999998,\n    },\n    {\n      地区: '中南',\n      细分: '公司',\n      销售额: 1335665.3239999984,\n    },\n    {\n      地区: '中南',\n      细分: '消费者',\n      销售额: 2057936.7620000008,\n    },\n    {\n      地区: '东北',\n      细分: '公司',\n      销售额: 834842.827,\n    },\n    {\n      地区: '东北',\n      细分: '消费者',\n      销售额: 1323985.6069999991,\n    },\n    {\n      地区: '华北',\n      细分: '公司',\n      销售额: 804769.4689999995,\n    },\n    {\n      地区: '华北',\n      细分: '消费者',\n      销售额: 1220430.5610000012,\n    },\n    {\n      地区: '西南',\n      细分: '公司',\n      销售额: 469341.684,\n    },\n    {\n      地区: '西南',\n      细分: '消费者',\n      销售额: 677302.8919999995,\n    },\n    {\n      地区: '西北',\n      细分: '公司',\n      销售额: 253458.1840000001,\n    },\n    {\n      地区: '西北',\n      细分: '消费者',\n      销售额: 458058.1039999998,\n    },\n  ];\n\n  if (series === 'yearmonth_gdp_city') return yearmonth_gdp_city;\n  if (series === 'region_sales') return region_sales;\n  if (series === 'region_cat_sales') return region_cat_sales;\n}\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"antd\", \"@antv/thumbnails\", \"@antv/chart-advisor\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"antd\"), require(\"@antv/thumbnails\"), require(\"@antv/chart-advisor\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.antd, global.thumbnails, global.chartAdvisor);\n    global.basic = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _antd, _thumbnails, _chartAdvisor) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _thumbnails = _interopRequireDefault(_thumbnails);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var charts = Object.keys(_thumbnails.default);\n  var Option = _antd.Select.Option;\n\n  var App = function App() {\n    var _useState = (0, _react.useState)('yearmonth_gdp_city'),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        current = _useState4[0],\n        setCurrent = _useState4[1];\n\n    var _useState5 = (0, _react.useState)([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        advices = _useState6[0],\n        setAdvices = _useState6[1];\n\n    var canvas = (0, _react.useRef)();\n    (0, _react.useEffect)(function () {\n      var chartData = getData(data); // step 1: data -> data props\n\n      var dataProps = (0, _chartAdvisor.dataToDataProps)(chartData);\n      console.log('dataProps: ', dataProps); // step 2: data props -> Advices( chart type + vega lite specs)\n\n      var advices = (0, _chartAdvisor.dataPropsToAdvices)(dataProps);\n      console.log('advices: ', advices);\n      setAdvices(advices);\n      setCurrent(advices[0].type);\n    }, [data]);\n    (0, _react.useEffect)(function () {\n      var chartData = getData(data);\n\n      if (current && canvas.current) {\n        // step 3: vega lite spec -> lib config\n        var typeSpec = advices.find(function (s) {\n          return s.type === current;\n        });\n        console.log('typeSpec: ', typeSpec); // step 4: lib config -> chart render & return instance\n\n        var libConfig = (0, _chartAdvisor.specToLibConfig)(typeSpec);\n        console.log('libConfig: ', libConfig);\n        canvas.current.innerHTML = null; // step 5: render\n\n        (0, _chartAdvisor.g2plotRender)(canvas.current, chartData, libConfig);\n      }\n    }, [data, current]);\n    var recommend = advices.map(function (i) {\n      return i.type;\n    });\n    return /*#__PURE__*/_react.default.createElement(_antd.Space, {\n      direction: \"vertical\",\n      size: \"large\"\n    }, /*#__PURE__*/_react.default.createElement(_antd.Space, null, /*#__PURE__*/_react.default.createElement(\"span\", null, \"Data Source:\"), /*#__PURE__*/_react.default.createElement(_antd.Select, {\n      value: data,\n      onChange: function onChange(v) {\n        setData(v);\n      },\n      style: {\n        width: 200\n      }\n    }, /*#__PURE__*/_react.default.createElement(Option, {\n      value: \"yearmonth_gdp_city\"\n    }, \"yearmonth_gdp_city\"), /*#__PURE__*/_react.default.createElement(Option, {\n      value: \"region_sales\"\n    }, \"region_sales\"), /*#__PURE__*/_react.default.createElement(Option, {\n      value: \"region_cat_sales\"\n    }, \"region_cat_sales\"))), /*#__PURE__*/_react.default.createElement(_antd.Row, null, /*#__PURE__*/_react.default.createElement(_antd.Col, {\n      span: 6\n    }, charts.map(function (chart) {\n      return /*#__PURE__*/_react.default.createElement(\"img\", {\n        src: _thumbnails.default[chart].url,\n        key: chart,\n        style: {\n          margin: 4,\n          border: chart === current ? '2px dashed #873bf4' : '1px solid #999',\n          width: 56,\n          borderRadius: 2,\n          opacity: recommend.indexOf(chart) > -1 ? 1 : 0.1,\n          cursor: recommend.indexOf(chart) > -1 ? 'pointer' : 'not-allowed'\n        },\n        onClick: function onClick() {\n          if (recommend.indexOf(chart) > -1) {\n            setCurrent(chart);\n          }\n        }\n      });\n    })), /*#__PURE__*/_react.default.createElement(_antd.Col, {\n      span: 18\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: canvas,\n      style: {\n        minHeight: 300\n      }\n    }))));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n\n  function getData(series) {\n    var yearmonth_gdp_city = [{\n      yearmonth: '2019-03',\n      gdp: 385,\n      city: 'Paris'\n    }, {\n      yearmonth: '2019-04',\n      gdp: 888,\n      city: 'Paris'\n    }, {\n      yearmonth: '2019-05',\n      gdp: 349,\n      city: 'Paris'\n    }, {\n      yearmonth: '2019-06',\n      gdp: 468,\n      city: 'Paris'\n    }, {\n      yearmonth: '2019-07',\n      gdp: 477,\n      city: 'Paris'\n    }, {\n      yearmonth: '2019-03',\n      gdp: 291,\n      city: 'London'\n    }, {\n      yearmonth: '2019-04',\n      gdp: 484,\n      city: 'London'\n    }, {\n      yearmonth: '2019-05',\n      gdp: 293,\n      city: 'London'\n    }, {\n      yearmonth: '2019-06',\n      gdp: 147,\n      city: 'London'\n    }, {\n      yearmonth: '2019-07',\n      gdp: 618,\n      city: 'London'\n    }];\n    var region_sales = [{\n      地区: '华东',\n      销售额: 4684506.442\n    }, {\n      地区: '中南',\n      销售额: 4137415.0929999948\n    }, {\n      地区: '东北',\n      销售额: 2681567.469000001\n    }, {\n      地区: '华北',\n      销售额: 2447301.017000004\n    }, {\n      地区: '西北',\n      销售额: 815039.5959999998\n    }, {\n      地区: '西南',\n      销售额: 1303124.508000002\n    }];\n    var region_cat_sales = [{\n      地区: '华东',\n      细分: '公司',\n      销售额: 1454715.807999998\n    }, {\n      地区: '华东',\n      细分: '消费者',\n      销售额: 2287358.261999998\n    }, {\n      地区: '中南',\n      细分: '公司',\n      销售额: 1335665.3239999984\n    }, {\n      地区: '中南',\n      细分: '消费者',\n      销售额: 2057936.7620000008\n    }, {\n      地区: '东北',\n      细分: '公司',\n      销售额: 834842.827\n    }, {\n      地区: '东北',\n      细分: '消费者',\n      销售额: 1323985.6069999991\n    }, {\n      地区: '华北',\n      细分: '公司',\n      销售额: 804769.4689999995\n    }, {\n      地区: '华北',\n      细分: '消费者',\n      销售额: 1220430.5610000012\n    }, {\n      地区: '西南',\n      细分: '公司',\n      销售额: 469341.684\n    }, {\n      地区: '西南',\n      细分: '消费者',\n      销售额: 677302.8919999995\n    }, {\n      地区: '西北',\n      细分: '公司',\n      销售额: 253458.1840000001\n    }, {\n      地区: '西北',\n      细分: '消费者',\n      销售额: 458058.1039999998\n    }];\n    if (series === 'yearmonth_gdp_city') return yearmonth_gdp_city;\n    if (series === 'region_sales') return region_sales;\n    if (series === 'region_cat_sales') return region_cat_sales;\n  }\n});"}],"API":{"node":{"fields":{"slug":"/zh/examples/chart-advisor/pipeline/API"},"frontmatter":{"title":"","order":null},"html":"<h2 id=\"何为-autochart\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E4%B8%BA-autochart\" aria-label=\"何为 autochart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何为 autoChart?</h2>\n<p>lorem</p>\n<h2 id=\"分析意图\" style=\"position:relative;\"><a href=\"#%E5%88%86%E6%9E%90%E6%84%8F%E5%9B%BE\" aria-label=\"分析意图 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分析意图</h2>"}}},"description":""}},"staticQueryHashes":["1015175297","3000541721","3000541721","3378097331","572619976"]}